//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CEdit.cpp
//  @ Date : 2013/9/12
//  @ Author : 
//
//


#include "CEdit.h"
#include <cstdio>
#include <conio.h>
using namespace std;

int CEdit::Input(int key) {
	char ch;
	int index = 0;
	bool resetEditArea = false;
	//设置新的颜色
	SMALL_RECT rect={m_rect.Left+2,m_rect.Top+1,m_rect.Right-2,m_rect.Bottom-1};
	//客户端大小，不包含边框
	index = m_text.size();
	while(true)
	{
		ch = getch();
		if (ch == ESC || ch == ENTER || ch == '\t')//'\t'tab建
		{
			break;
		}	
		if (ch == -32 || ch == 0)
		{
			ch = getch();
			if (ch == UP || ch == DOWN)
			{
				break;
			}
			switch(ch)
			{
			case LEFT:
				if (index > 0)
				{
					index--;
					SetCursorPos(2+index,1);
				}
				break;
			case RIGHT:
				if (index!= m_text.length())
				{
					index++;
					SetCursorPos(2+index,1);
				}
				break;
			case DELETES:
				if (index<m_text.length())
				{
					m_text.erase(index,1);

					resetEditArea = true;
				}
				break;
			case HOME:
				if (index >0)
				{
					index = 0;
					SetCursorPos(2+index,1);
				}
				break;
			case END:
				if (index<m_text.length())
				{
					index = m_text.length();
					SetCursorPos(2+index,1);
				}
				break;
			}
			continue;
		}
		if (ch == '\b' && index > 0)//'\b退格键
		{		
			m_text.erase(index-1,1);
			index--;
			resetEditArea = true;
		}
		else if (m_text.length() < m_maxLength && isprint(ch))
		{
			m_text.insert(index,1,ch);
			index++;
			resetEditArea = true;

		}
		if(resetEditArea)
		{
			ClearWindow(rect);
			PrintTitle(m_alignment);
			SetCursorPos(2+index,1);
			resetEditArea = false;
		}
	}
	//失去焦点后，恢复原来的颜色
	return ch;
}

void CEdit::Show() {
	DrawFrame(0);
	PrintTitle(m_alignment);
}

void CEdit::PrintTitle(int alignment) {
	if (m_type == 0)
	{
		CForm::PrintTitle(alignment);
	} 
	else
	{
		//密码输出
		COORD pos;
		DWORD temp;
		pos.Y = m_rect.Top + 1;
		pos.X = m_rect.Left + 2;
		FillConsoleOutputCharacter(s_hOut,'*',m_text.length(),pos,&temp);
	}
}

CEdit::CEdit(string title, const SMALL_RECT &rect, int maxLen, int type, int aligment):CForm(title,rect) {
	m_maxLength=maxLen;
	m_type=type;
	m_alignment=aligment;
}

CEdit::CEdit() {

}

void CEdit::FocusOn(){
	ChgAttribute(CForm::Red,CForm::White);
	SMALL_RECT rect={m_rect.Left+2,m_rect.Top+1,m_rect.Right-2,m_rect.Bottom-1};
	//客户端大小，不包含边框
	ClearWindow(rect);
	int index = m_text.size();
	PrintTitle(m_alignment);
	SetCursorPos(2+index,1);
	ShowCursor(true);
}
void CEdit::FocusOff(){
	SMALL_RECT rect={m_rect.Left+2,m_rect.Top+1,m_rect.Right-2,m_rect.Bottom-1};
	RetAttribute();
	ClearWindow(rect);
	PrintTitle(m_alignment);

}
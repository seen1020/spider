//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CForm.h
//  @ Date : 2013/9/12
//  @ Author :
//
//


#if !defined(_CFORM_H)
#define _CFORM_H
#pragma disable(warning:4786)
#pragma disable(warning:4996)
#include <Windows.h>
#include <string>
#include <WinCon.h>
#include <assert.h>
#include <cstdio>
#include <conio.h>
#include <vector>
#include <stack>
#include <iostream>
using namespace std;
#define FOREGROUND_BLUE      0x0001 //蓝色（文本）
#define FOREGROUND_GREEN     0x0002 //绿色（文本）
#define FOREGROUND_RED       0x0004 //红色（文本）
#define FOREGROUND_INTENSITY 0x0008 //加强（文本）
#define BACKGROUND_BLUE      0x0010 //蓝色背景
#define BACKGROUND_GREEN     0x0020 //绿色背景
#define BACKGROUND_RED       0x0040 //红色背景
#define BACKGROUND_INTENSITY 0x0080 //背景色加强
#define ENTER 13
#define HOME 71
#define UP 72
#define DOWN 80
#define LEFT 75
#define RIGHT 77
#define END 79
#define DELETES 83
#define INSERT 82
#define ESC 27
struct BufBlock{
	CHAR_INFO buffer[81 * 26];
	SMALL_RECT rect;
	COORD size,pos;
};
class CForm {
public:
	enum{
		ID_OK=-1,
		ID_CANCEL=-2,
		ID_NO=-3
	};
	enum{
		Text,PassWord
	};
	enum{
		Left,Middle,Right
	};
	enum{
		Single,Double,MIX1,MIX2,Round,MIX3
	};
	enum
	{
		Black,// 当color = 0	表示 黑色
		Blue,// 当color = 1	表示 蓝色
		Green,// 当color = 2	表示 绿色
		Cyan,// 当color = 3	表示 青色
		Red,// 当color = 4	表示 红色
		Magenta,// 当color = 5	表示 洋红
		Brown,// 当color = 6	表示 综色
		LightGary,// 当color = 7	表示 淡灰
		DarkGray,// 当color = 8	表示 深灰
		LightBlue,// 当color = 9	表示 淡蓝
		LightGreen,// 当color = 10 表示 淡绿
		LightCyan,// 当color = 11 表示 淡青
		LightRed,// 当color = 12 表示 淡红
		LightMagenta,// 当color = 13 表示 淡洋红
		Yellow,// 当color = 14 表示 黄色
		White// 当color = 15 表示 白色
	};
	CForm();
	CForm(string title,const SMALL_RECT &rect);
	virtual ~CForm();
	static void StartConsole();
	static void CloseConsole();
	static void ClearWindow(const SMALL_RECT &rect);
	static void ShowCursor(bool show);
	static void ChgAttribute(int bgColor, int fgColor);
	static bool RetAttribute();
	static void SaveWindow(const COORD &size,const COORD &pos,SMALL_RECT temp);
	static void SaveWindow();
	static void RetWindow();
	static void PrintWord(const char * ss,int x,int y);
	static void MakeFrameWord();
	//////////////////////////////////////
	void DrawFrame(int mode=0);
	void SetCursorPos(int x, int y);
	void GetCursorPos(int &x, int &y);
	void SetTitle(string title);
	string GetTitle();
	//////////////////////////////////////
	virtual void Show();
	virtual int Input(int key);
	virtual void PrintTitle(int alignment);
	virtual void FocusOn();
	virtual void FocusOff();
protected:
	static char chBox[6][7][3];
	static WORD bkColors[16];
	static WORD foColors[16];
	static vector<int> m_bkColorIndex;
	static vector<int> m_foColorIndex;
	static stack<BufBlock> buffers;
	SMALL_RECT m_rect;
public:
	string m_text;
	static HANDLE s_hIn;
	static HANDLE s_hOut;
};

#endif  //_CFORM_H
